var log = require("log");
log.setLevel("INFO");

var requestParams = request.body;

var publishResponse = function(channel, data, request, id) {
   var message = {"result": data};
   if(request.body && request.body.id) {
     message["id"] = request.body.id;
   } else {
     if(!id) {
        id = "gauge"
     }
     //Add a default id to identify the message published over the socket
      message["id"] = id;
   }
   publish(channel, message);
}

// data for line, bar, and area charts
var data = [{ y: "2006", a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) },
    { y: "2007", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2008", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2009", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2010", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2011", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2012", a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) }];


// data for line, bar, and area charts
var dataline = [{ y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) }];

// data for donut chart
var donutdata = [{label: "Cranes", value: Math.floor((Math.random() * 100) + 1) }, {label: "Drillers",value: Math.floor((Math.random() * 100) + 1) }, {label: "Blasters", value: Math.floor((Math.random() * 100) + 1) }];

publishResponse("responseChannel", data, request, "chart");

publishResponse("responseChannel", dataline, request, "chartline");
publishResponse("responseChannel", donutdata, request, "donut");

return data;
